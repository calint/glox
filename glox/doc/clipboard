
g++ -I/System/Library/Frameworks/GLUT.framework/Versions/Current/Headers/ -I/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers/ -O0 -g3 -pedantic -Wall -Wextra -Werror -c -fmessage-length=0 -o src/glox.o ../src/glox.cpp
g++ -L/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries -framework Carbon -framework OpenGL -framework GLUT -o glox src/glox.o



cmd="g++ -o $bbin $srcdir/$src \
	-framework GLUT \
	-framework OpenGL \
	-I/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers/ \
	-I/System/Library/Frameworks/GLUT.framework/Versions/Current/Headers/ \
	-L/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries"&&

-framework Carbon
-framework OpenGL -framework GLUT


/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries


//try{return window::main(0,NULL);}
//catch(const char*p){cout<<"••• error: "<<p<<endl;stktrace();}
//catch(void*p){cout<<"•• error: "<<p<<" "<<p<<endl;stktrace();}
//catch(...){cerr<<"•••• error:"<<endl;stktrace();}


//inline static void f(const char&c){cout<<c;}
//inline static void f2(char&c){cout<<c;c=' ';}
//	char s[]="jello world";
//	puts(s);
//	array<const char>a=array<const char>("hello world",0,3);
//	a.ro(0,a.len(),f);
//	a.rw(0,a.len(),f);
//	cout<<endl;
//	array<char>b=array<char>(s,0,3);
//	b.ro(0,a.len(),f);
//	b.rw(0,a.len(),f2);
//	cout<<endl;
//	puts(s);


static void main_sigf(const int a){
	cout<<" ••• terminated with signal "<<a<<endl;
	exit(a);
}
int main(){
	for(int i=0;i<32;i++)//?
		signal(i,main_sigf);
	return window::main(0,NULL);
}




//		throw signl(2,"exception");
//		throw signl(__LINE__,__FUNCTION__);





//		for(vector<obj*>::iterator it=chs.begin();it!=chs.end();++it){
//			(*it)->draw();
//		}


		lut<bool>lutc=lut<bool>();
		const unsigned char ch='a';
		const char ke[]={ch,0};
		cout<<lutc[ke]<<endl;
		lutc.put(ke,true);
		cout<<lutc[ke]<<endl;
		lutc.put(ke,false);
		cout<<lutc[ke]<<endl;
		
		
		
//			cout<<__LINE__<<":: "<<(void*)&lutkeys<<" "<<lutkeys[ks]<<endl;
//			cout<<" keydown: already have "<<key<<" " <<(int)key<<"@"<<x<<","<<y<<endl;



		/System/Library/Frameworks/GLUT.framework/Versions/Current/Headers/



